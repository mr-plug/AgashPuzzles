from PyQt5.QtWidgets import QMainWindow
from PyQt5.uic import loadUi
from pathlib import Path


class WoodDirectory(QMainWindow):
    def __init__(self, parent=None):
        super().__init__(parent)
        # Загрузка интерфейса
        ui_path = Path(__file__).resolve().parents[2] / 'assets' / 'styles' / 'wood_directory.ui'
        loadUi(ui_path, self)

        # Инициализация выпадающего списка и событий
        self.wood_data = {
            "Береза": "Береза - обладает высокой прочностью и жесткостью, имеет светлый цвет и однородную текстуру, что делает её идеальной для покраски и нанесения рисунков.",
            "Сосна": "Сосна - легкая и доступная древесина, имеет характерный запах и текстуру, обычно используется для бюджетных вариантов пазлов.",
            "Клен": "Клен - очень прочная и твердая древесина, имеет светлый цвет и красивую текстуру, что делает её популярной для высококачественных пазлов.",
            "Махагон": "Махагон - Экзотическая древесина с красивым красноватым оттенком, обладает хорошей устойчивостью к влаге и повреждениям.",
            "Дуб": "Дуб - известен своей прочностью и долговечностью, имеет характерную текстуру и цвет, что придаёт пазлам уникальный вид.",
            "Липа": "Липа - легкая и мягкая древесина, легко обрабатывается, часто используется для детских пазлов из-за своей безопасности.",
            "Тик": "Тик - экзотическая древесина с отличной устойчивостью к влаге, часто используется для изготовления высококачественных пазлов и игрушек.",
            "Вишня": "Вишня - имеет красивый красноватый оттенок, который темнеет со временем, хорошо подходит для создания элегантных и стильных пазлов.",
        }
        self.comboWoodTypes.addItems(self.wood_data.keys())
        self.comboWoodTypes.currentTextChanged.connect(self.update_text_info)

        # Подключение кнопки "Назад"
        self.btnBack.clicked.connect(self.close)

        # Устанавливаем начальное значение текста
        self.update_text_info()

    def update_text_info(self):
        """Обновляет текстовое поле в зависимости от выбранного элемента."""
        selected_wood = self.comboWoodTypes.currentText()
        self.textWoodInfo.setPlainText(self.wood_data.get(selected_wood, ""))
